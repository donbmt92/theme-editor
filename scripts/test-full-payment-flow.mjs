import fetch from 'node-fetch'

// Test lu·ªìng thanh to√°n ho√†n ch·ªânh
async function testFullPaymentFlow() {
  console.log('=== TEST LU·ªíNG THANH TO√ÅN HO√ÄN CH·ªàNH ===\n')
  
  const baseUrl = 'https://onghoangdohieu.com'
  
  // Step 1: T·∫°o payment (simulate)
  console.log('1. T·∫°o payment record...')
  const paymentData = {
    amount: 5000,
    currency: 'VND',
    planId: 'pro',
    customerInfo: {
      fullName: 'Test User',
      email: 'test@example.com',
      phone: '0123456789'
    },
    bankId: 'ACB'
  }
  
  // Simulate payment creation (kh√¥ng th·ªÉ test th·ª±c v√¨ c·∫ßn auth)
  const mockPaymentId = 'test_payment_' + Date.now()
  const mockBankTxnId = 'TXN_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9)
  
  console.log(`   Payment ID: ${mockPaymentId}`)
  console.log(`   Bank TXN ID: ${mockBankTxnId}`)
  console.log(`   Amount: ${paymentData.amount} VND`)
  
  // Step 2: Test Sepay webhook v·ªõi payload th·ª±c t·∫ø
  console.log('\n2. Test Sepay webhook...')
  
  const webhookPayload = {
    "gateway": "ACB",
    "transactionDate": "2025-01-19 20:23:13",
    "accountNumber": "3699781",
    "subAccount": null,
    "code": null,
    "content": `${mockBankTxnId}-0123456789-Thanh toan goi Goi Chuyen Nghiep`,
    "transferType": "in",
    "description": `BankAPINotify ${mockBankTxnId}-0123456789-Thanh toan goi Goi Chuyen Nghiep`,
    "transferAmount": paymentData.amount,
    "referenceCode": mockBankTxnId,
    "accumulated": 0,
    "id": Math.floor(Math.random() * 1000000)
  }
  
  console.log('   Webhook payload:', JSON.stringify(webhookPayload, null, 2))
  
  // Test v·ªõi API key kh√°c nhau
  const testCases = [
    {
      name: 'Test v·ªõi API key ƒë√∫ng',
      apiKey: 'ƒë√¢y_l√†_kh√≥a_b√≠_m·∫≠t',
      expectedStatus: 200
    },
    {
      name: 'Test v·ªõi API key sai',
      apiKey: 'wrong-key',
      expectedStatus: 401
    },
    {
      name: 'Test kh√¥ng c√≥ Authorization header',
      apiKey: null,
      expectedStatus: 401
    }
  ]
  
  for (const testCase of testCases) {
    console.log(`\n   ${testCase.name}:`)
    
    const headers = {
      'Content-Type': 'application/json',
      'User-Agent': 'Sepay-Webhook/1.0'
    }
    
    if (testCase.apiKey) {
      headers['Authorization'] = `Bearer ${testCase.apiKey}`
    }
    
    try {
      const response = await fetch(`${baseUrl}/api/sepay/webhook`, {
        method: 'POST',
        headers,
        body: JSON.stringify(webhookPayload)
      })
      
      const result = await response.text()
      console.log(`     Status: ${response.status} (expected: ${testCase.expectedStatus})`)
      console.log(`     Response: ${result}`)
      
      if (response.status === testCase.expectedStatus) {
        console.log(`     ‚úÖ PASS`)
      } else {
        console.log(`     ‚ùå FAIL`)
      }
      
    } catch (error) {
      console.log(`     Error: ${error.message}`)
      console.log(`     ‚ùå FAIL`)
    }
  }
  
  // Step 3: Test v·ªõi payload b·ªã l·ªói format (nh∆∞ trong log th·ª±c t·∫ø)
  console.log('\n3. Test v·ªõi payload b·ªã l·ªói format...')
  
  const malformedPayload = JSON.stringify(webhookPayload) + '{"success":false,"error":"Unauthorized"}'
  
  try {
    const response = await fetch(`${baseUrl}/api/sepay/webhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ƒë√¢y_l√†_kh√≥a_b√≠_m·∫≠t',
        'User-Agent': 'Sepay-Webhook/1.0'
      },
      body: malformedPayload
    })
    
    const result = await response.text()
    console.log(`   Status: ${response.status}`)
    console.log(`   Response: ${result}`)
    
  } catch (error) {
    console.log(`   Error: ${error.message}`)
  }
  
  // Step 4: Test GET endpoint
  console.log('\n4. Test GET endpoint (webhook verification)...')
  
  try {
    const response = await fetch(`${baseUrl}/api/sepay/webhook`, {
      method: 'GET'
    })
    
    const result = await response.text()
    console.log(`   Status: ${response.status}`)
    console.log(`   Response: ${result}`)
    
  } catch (error) {
    console.log(`   Error: ${error.message}`)
  }
  
  console.log('\n=== K·∫æT LU·∫¨N ===')
  console.log('‚úÖ ƒê√£ test lu·ªìng thanh to√°n ho√†n ch·ªânh')
  console.log('‚úÖ ƒê√£ test c√°c tr∆∞·ªùng h·ª£p l·ªói')
  console.log('‚úÖ ƒê√£ test webhook verification')
  console.log('\nüìã C√°c b∆∞·ªõc ti·∫øp theo:')
  console.log('1. Deploy code l√™n server')
  console.log('2. C·∫•u h√¨nh SEPAY_API_KEY tr√™n server')
  console.log('3. Test v·ªõi Sepay th·ª±c t·∫ø')
  console.log('4. Monitor logs ƒë·ªÉ debug')
}

async function main() {
  await testFullPaymentFlow()
}

main().catch(console.error)
