import { ThemeParams } from '../types'

/**
 * Generate static CSS file
 */
export function generateStaticCss(themeParams: ThemeParams): string {
  const colors = themeParams?.colors || {}
  
  return `/* Optimized CSS for ${themeParams?.content?.meta?.title || 'Business Website'} */
/* Generated by Theme Editor v2.0 */

:root {
  --primary: ${colors.primary || '#8B4513'};
  --secondary: ${colors.secondary || '#D2691E'};
  --accent: ${colors.accent || '#CD853F'};
  --background: ${colors.background || '#F5F5DC'};
  --text: ${colors.text || '#2D3748'};
  --border: ${colors.border || colors.primary || '#8B4513'};
  --muted: ${colors.muted || '#718096'};
  --success: ${colors.success || '#28a745'};
  --warning: ${colors.warning || '#ffc107'};
  --error: ${colors.error || '#dc3545'};
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: ${themeParams?.typography?.fontFamily || 'Inter, system-ui, sans-serif'};
  font-size: ${themeParams?.typography?.fontSize || '16px'};
  line-height: ${themeParams?.typography?.lineHeight || '1.6'};
  color: var(--text);
  background-color: var(--background);
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
  font-weight: ${themeParams?.typography?.fontWeight || '700'};
  line-height: ${themeParams?.typography?.lineHeight || '1.2'};
  margin-bottom: 1rem;
}

h1 { font-size: ${themeParams?.typography?.headingSize === '2xl' ? '2.5rem' : 
                  themeParams?.typography?.headingSize === 'xl' ? '2rem' : 
                  themeParams?.typography?.headingSize === 'lg' ? '1.875rem' : '2.25rem'}; }
h2 { font-size: ${themeParams?.typography?.headingSize === '2xl' ? '2rem' : 
                  themeParams?.typography?.headingSize === 'xl' ? '1.75rem' : 
                  themeParams?.typography?.headingSize === 'lg' ? '1.5rem' : '1.875rem'}; }
h3 { font-size: ${themeParams?.typography?.headingSize === '2xl' ? '1.5rem' : 
                  themeParams?.typography?.headingSize === 'xl' ? '1.375rem' : 
                  themeParams?.typography?.headingSize === 'lg' ? '1.25rem' : '1.5rem'}; }

p {
  margin-bottom: 1rem;
  font-size: ${themeParams?.typography?.bodySize === 'sm' ? '0.875rem' : 
               themeParams?.typography?.bodySize === 'lg' ? '1.125rem' : 
               themeParams?.typography?.bodySize === 'xl' ? '1.25rem' : '1rem'};
}

/* Layout */
.container {
  max-width: ${themeParams?.layout?.containerWidth || '1200px'};
  margin: 0 auto;
  padding: 0 1rem;
}

/* Buttons */
.btn {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: ${themeParams?.components?.button?.rounded ? '9999px' : 
                  themeParams?.layout?.borderRadius === 'small' ? '0.125rem' : 
                  themeParams?.layout?.borderRadius === 'large' ? '0.5rem' : '0.375rem'};
  font-family: inherit;
  font-size: inherit;
  font-weight: ${themeParams?.typography?.fontWeight || '500'};
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
}

.btn-primary {
  background-color: var(--primary);
  color: white;
}

.btn-primary:hover {
  background-color: var(--secondary);
  transform: translateY(-2px);
}

.btn-outline {
  background-color: transparent;
  border: 2px solid var(--primary);
  color: var(--primary);
}

.btn-outline:hover {
  background-color: var(--primary);
  color: white;
}

/* Cards */
.card {
  background: white;
  border-radius: ${themeParams?.layout?.borderRadius === 'small' ? '0.125rem' : 
                  themeParams?.layout?.borderRadius === 'large' ? '0.5rem' : '0.375rem'};
  box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  transition: all 0.3s ease;
  overflow: hidden;
}

.card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 30px rgba(0,0,0,0.15);
}

/* Grid */
.grid {
  display: grid;
  gap: 2rem;
}

.grid-cols-1 { grid-template-columns: 1fr; }
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
.grid-cols-4 { grid-template-columns: repeat(4, 1fr); }

/* Responsive */
@media (max-width: 768px) {
  .grid-cols-2, .grid-cols-3, .grid-cols-4 {
    grid-template-columns: 1fr;
  }
  
  h1 { font-size: 2rem; }
  h2 { font-size: 1.5rem; }
  h3 { font-size: 1.25rem; }
}

/* Animations */
@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.animate-slide-up {
  animation: slideUp 0.6s ease-out both;
}

.animate-fade-in {
  animation: fadeIn 0.6s ease-out both;
}

/* Accessibility */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus styles */
button:focus,
a:focus {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}`
}

/**
 * Generate static JavaScript file
 */
export function generateStaticJs(): string {
  return `/* Optimized JavaScript for Business Website */
/* Generated by Theme Editor v2.0 */

(function() {
  'use strict';
  
  // Mobile menu toggle
  function initMobileMenu() {
    const mobileMenuButton = document.querySelector('button[onclick="toggleMobileMenu()"]');
    const mobileMenu = document.getElementById('mobileMenu');
    
    if (mobileMenuButton && mobileMenu) {
      // Remove inline onclick and add event listener
      mobileMenuButton.removeAttribute('onclick');
      mobileMenuButton.addEventListener('click', function() {
        if (mobileMenu.style.display === 'none' || mobileMenu.style.display === '') {
          mobileMenu.style.display = 'block';
        } else {
          mobileMenu.style.display = 'none';
        }
      });
    }
  }
  
  // Navigation visibility based on screen size
  function updateNavigation() {
    const desktopNav = document.querySelector('nav');
    const desktopCTAs = document.querySelector('div[style*="display: none; align-items: center"]');
    const mobileButton = document.querySelector('button[onclick="toggleMobileMenu()"]');
    
    if (!desktopNav || !desktopCTAs || !mobileButton) return;
    
    const isDesktop = window.matchMedia('(min-width: 768px)').matches;
    
    if (isDesktop) {
      desktopNav.style.display = 'flex';
      desktopCTAs.style.display = 'flex';
      mobileButton.style.display = 'none';
    } else {
      desktopNav.style.display = 'none';
      desktopCTAs.style.display = 'none';
      mobileButton.style.display = 'block';
    }
  }
  
  // Smooth scrolling for anchor links
  function initSmoothScrolling() {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  }
  
  // Intersection Observer for animations
  function initAnimations() {
    if ('IntersectionObserver' in window) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-slide-up');
          }
        });
      }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      });
      
      // Observe all cards and sections
      document.querySelectorAll('.card, section').forEach(el => {
        observer.observe(el);
      });
    }
  }
  
  // Form handling
  function initForms() {
    const forms = document.querySelectorAll('form');
    
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Basic form validation
        const requiredFields = form.querySelectorAll('[required]');
        let isValid = true;
        
        requiredFields.forEach(field => {
          if (!field.value.trim()) {
            isValid = false;
            field.style.borderColor = 'var(--error)';
          } else {
            field.style.borderColor = '';
          }
        });
        
        if (isValid) {
          // Show success message or submit form
          console.log('Form submitted successfully');
        }
      });
    });
  }
  
  // Performance optimization
  function optimizePerformance() {
    // Lazy load images
    if ('IntersectionObserver' in window) {
      const imageObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target;
            img.src = img.dataset.src;
            img.classList.remove('lazy');
            imageObserver.unobserve(img);
          }
        });
      });
      
      document.querySelectorAll('img[data-src]').forEach(img => {
        imageObserver.observe(img);
      });
    }
    
    // Preload critical resources
    const criticalLinks = document.querySelectorAll('link[rel="preload"]');
    criticalLinks.forEach(link => {
      const href = link.getAttribute('href');
      if (href) {
        const linkElement = document.createElement('link');
        linkElement.rel = 'stylesheet';
        linkElement.href = href;
        document.head.appendChild(linkElement);
      }
    });
  }
  
  // Initialize everything when DOM is ready
  function init() {
    initMobileMenu();
    updateNavigation();
    initSmoothScrolling();
    initAnimations();
    initForms();
    optimizePerformance();
    
    // Listen for resize events
    window.addEventListener('resize', updateNavigation);
    
    // Add global toggle function for backward compatibility
    window.toggleMobileMenu = function() {
      const menu = document.getElementById('mobileMenu');
      if (menu) {
        if (menu.style.display === 'none' || menu.style.display === '') {
          menu.style.display = 'block';
        } else {
          menu.style.display = 'none';
        }
      }
    };
  }
  
  // Run initialization
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
})();`
}

/**
 * Generate sitemap.xml file
 */
export function generateSitemapFile(projectName: string, themeParams: ThemeParams): string {
  const baseUrl = themeParams?.content?.meta?.url || 'https://example.com'
  const lastmod = new Date().toISOString().split('T')[0]
  
  return `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>${baseUrl}/</loc>
    <lastmod>${lastmod}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>1.0</priority>
  </url>
  <url>
    <loc>${baseUrl}/#about</loc>
    <lastmod>${lastmod}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.8</priority>
  </url>
  <url>
    <loc>${baseUrl}/#products</loc>
    <lastmod>${lastmod}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.8</priority>
  </url>
  <url>
    <loc>${baseUrl}/#contact</loc>
    <lastmod>${lastmod}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.7</priority>
  </url>
</urlset>`
}

/**
 * Generate robots.txt file
 */
export function generateRobotsTxtFile(): string {
  return `User-agent: *
Allow: /

# Sitemap
Sitemap: https://example.com/sitemap.xml

# Disallow admin areas (if any)
Disallow: /admin/
Disallow: /private/

# Crawl delay for respectful crawling
Crawl-delay: 1`
}

/**
 * Generate manifest.json file
 */
export function generateManifestFile(projectName: string, themeParams: ThemeParams): string {
  const colors = themeParams?.colors || {}
  
  return JSON.stringify({
    "name": projectName,
    "short_name": projectName,
    "description": `${projectName} - Professional Website`,
    "start_url": "/",
    "display": "standalone",
    "background_color": colors.background || "#F5F5DC",
    "theme_color": colors.primary || "#8B4513",
    "orientation": "portrait-primary",
    "scope": "/",
    "lang": "vi",
    "categories": ["business", "professional", "website"],
    "icons": [
      {
        "src": "assets/images/favicon.ico",
        "sizes": "any",
        "type": "image/x-icon"
      },
      {
        "src": "assets/images/logo-192.png",
        "sizes": "192x192",
        "type": "image/png",
        "purpose": "any maskable"
      },
      {
        "src": "assets/images/logo-512.png",
        "sizes": "512x512",
        "type": "image/png",
        "purpose": "any maskable"
      }
    ],
    "screenshots": [
      {
        "src": "assets/images/screenshot-wide.png",
        "sizes": "1280x720",
        "type": "image/png",
        "form_factor": "wide"
      },
      {
        "src": "assets/images/screenshot-narrow.png",
        "sizes": "750x1334",
        "type": "image/png",
        "form_factor": "narrow"
      }
    ]
  }, null, 2)
}

/**
 * Generate README.md file
 */
export function generateStaticReadme(projectName: string, description: string): string {
  return `# ${projectName}

${description}

## Static HTML Website - Optimized v2.0

This website was generated using an optimized deployment system that supports high-scale operations.

## Performance Features

- ✅ Parallel file I/O operations
- ✅ Memory-efficient streaming for large files  
- ✅ Template caching system
- ✅ Rate limiting protection
- ✅ Automatic cleanup of old deploys
- ✅ Optimized for thousands of concurrent deploys

## Getting Started

### Option 1: Direct Browser
Simply open \`index.html\` in your web browser.

### Option 2: Local Server (Recommended)
\`\`\`bash
# Python 3
python -m http.server 8000

# Or Node.js
npx serve .

# Or PHP
php -S localhost:8000
\`\`\`

## Deployment

Use the optimized deploy script for your server type. The script includes:
- Automated dependency checks
- Error recovery mechanisms  
- Performance optimizations
- Security best practices

### Supported Server Types

- **Nginx**: \`./deploy-nginx.sh\`
- **Apache**: \`./deploy-apache.sh\`
- **Node.js**: \`./deploy-node.sh\`
- **Docker**: \`./deploy-docker.sh\`

## File Structure

\`\`\`
${projectName}/
├── index.html              # Main HTML file
├── assets/
│   ├── css/
│   │   └── styles.css      # Main stylesheet
│   ├── js/
│   │   └── scripts.js      # Main JavaScript
│   └── images/             # Image assets
├── sitemap.xml             # SEO sitemap
├── robots.txt              # Search engine directives
├── manifest.json           # PWA manifest
├── README.md               # This file
└── deploy-*.sh             # Deploy scripts
\`\`\`

## Customization

This website is built with a modular template system that allows easy customization of:
- Colors and typography
- Layout and spacing
- Content sections
- Component styles

## Browser Support

- Chrome 60+
- Firefox 55+
- Safari 12+
- Edge 79+

## Performance Metrics

- **First Contentful Paint**: < 1.5s
- **Largest Contentful Paint**: < 2.5s
- **Cumulative Layout Shift**: < 0.1
- **First Input Delay**: < 100ms

## License

MIT License - Optimized for enterprise use.

## Support

For technical support or customization requests, please contact the development team.

---

*Generated by Theme Editor v2.0 - VPS Optimized*`
}
